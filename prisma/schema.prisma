// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  name          String
  email         String          @unique
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  workdays      Workday[]
  workTrucks    WorkTruck[]
  parts         Part[]
  partsHistory  PartsHistory[]
  restocks      Restock[]
}

model Workday {
  id        String      @id @default(uuid())
  date      DateTime
  user      User        @relation(fields: [userId], references: [id])
  userId    String
  inventory Inventory[]
}

model WorkTruck {
  id           String         @id @default(uuid())
  name         String
  user         User           @relation(fields: [userId], references: [id])
  userId       String
  inventory    Inventory[]
  partsHistory PartsHistory[]
}

model Part {
  id           String         @id @default(uuid())
  name         String
  user         User           @relation(fields: [userId], references: [id])
  userId       String
  inventory    Inventory[]
  partsHistory PartsHistory[]
  restocks     Restock[]
}

model Inventory {
  id        String    @id @default(uuid())
  part      Part      @relation(fields: [partId], references: [id])
  partId    String
  workday   Workday   @relation(fields: [workdayId], references: [id])
  workdayId String
  truck     WorkTruck @relation(fields: [truckId], references: [id])
  truckId   String
  quantity  Int

  @@unique([partId, workdayId, truckId])
}

model PartsHistory {
  id        String    @id @default(uuid())
  part      Part      @relation(fields: [partId], references: [id])
  partId    String
  truck     WorkTruck @relation(fields: [truckId], references: [id])
  truckId   String
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  date      DateTime
  quantity  Int
}

model Restock {
  id        String   @id @default(uuid())
  part      Part     @relation(fields: [partId], references: [id])
  partId    String
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  date      DateTime @default(now())
  quantity  Int
}
